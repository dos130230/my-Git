{
    "141": {
        "path": "./simbol.txt",
        "src": "console.log(\"How all file watching........\")\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}"
    },
    "216": {
        "path": ".//men//index/bila.js",
        "src": ""
    },
    "269": {
        "path": "./simbol.txt",
        "src": "kdfskdfnks"
    },
    "292": {
        "path": ".//men//index/bila.js",
        "src": "cv"
    },
    "298": {
        "path": ".//men//index/bila.js",
        "src": ""
    },
    "394": {
        "path": "./simbol.txt",
        "src": "Recur(\"./\",rd"
    },
    "485": {
        "path": "./index.js",
        "src": "i"
    },
    "609": {
        "path": ".//men//index/node.txt",
        "src": "kdf"
    },
    "766": {
        "path": ".//men//index/bila.js",
        "src": "lskdfj'aldkfl'aksdfaldfkdlg'asldk\nlskdfj'aldkfl'aksdfaldfkdlg'asldk\nlskdfj'aldkfl'aksdfaldfkdlg'asldk\nlskdfj'aldkfl'aksdfaldfkdlg'asldk\nlskdfj'aldkfl'aksdfaldfkdlg'asldk\nlskdfj'aldkfl'aksdfaldfkdlg'asldk\nlskdfj'aldkfl'aksdfaldfkdlg'asldk\nlskdfj'aldkfl'aksdfaldfkdlg'asldk\nlskdfj'aldkfl'aksdfaldfkdlg'asldk"
    },
    "4268": {
        "path": "./watch.js",
        "src": "\nlet sum = ''\nlet arr = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\treadBaza[Math.random()*100001|0]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read)\n\n})\n\n\n\n\n"
    },
    "8866": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "12562": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "28844": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "31794": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "31878": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "31915": {
        "path": "./watch.js",
        "src": "\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n"
    },
    "32124": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "36701": {
        "path": ".//men//index/node.txt",
        "src": "meni"
    },
    "39477": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "45214": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "49133": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "51959": {
        "path": ".//men//index/node.txt",
        "src": "mlklsdlkfmk"
    },
    "56703": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "62154": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "64349": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "64748": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "65674": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "68059": {
        "path": ".//men//index/node.txt",
        "src": "meni"
    },
    "70576": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "71923": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "72764": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "76726": {
        "path": "./watch.js",
        "src": "\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\nconsole.log(papka)\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n"
    },
    "83835": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "84651": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "88301": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "91067": {
        "path": "./watch.js",
        "src": "setInterval(()=>{\n\n\t\nlet sum = ''\nlet arr = []\nlet papka = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t\tpapka.push(argument+\"/\"+i+\"/\")\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\n// console.log(papka)\n\nfor(let i of papka){\n\tfs.watchFile(i,{inerval:500},(what,file)=>{\n\t\tconsole.log(\"qoshildiiii----------------\")\n\t})\n}\n\n\n\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n\n},1000)"
    },
    "92481": {
        "path": ".//men//index/node.txt",
        "src": "kdjslkdflskd"
    },
    "98276": {
        "path": "./watch.js",
        "src": "\nlet sum = ''\nlet arr = []\nconst fs = require(\"fs\")\nlet red = fs.readdirSync(\"./\")\nfunction Recur(argument,red) {\n\tfor(let i of red){\n\t\ttry{\n\t\t\tlet olim = fs.readdirSync(argument+\"/\"+i)\n\t\t\tRecur(argument+\"/\"+i+\"/\",olim)\n\t\t}catch(eror){\n\t\t\tarr.push(argument+i)\n\t\t}\n\t}\n}\nRecur(\"./\",red)\nconsole.log(\"How all file watching........\")\nfor(let i of arr)\nfs.watchFile(i,{inerval:500},(what,file)=>{\n\tlet read = fs.readFileSync(i,\"utf8\")\n\n\tlet obj = \n\t\t{\n\t\t\tpath:i,\n\t\t\tsrc:read\n\t\t}\n\t\n\tlet readBaza = fs.readFileSync(\"../baza.json\",\"utf8\")|| \"{}\"\n\treadBaza = JSON.parse(readBaza)\n\tlet rendom = Math.random()*100001|0\n\treadBaza[rendom]= obj\n\tfs.writeFileSync(\"../baza.json\",JSON.stringify(readBaza,null,4))\n\t\n\tconsole.log(\"change: \"+i)\n\tconsole.log(\"write: \"+read+\" id: \"+rendom)\n\n})\n\n\n\n\n"
    }
}